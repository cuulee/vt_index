// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tile_index.proto

/*
Package tile_index is a generated protocol buffer package.

It is generated from these files:
	tile_index.proto

It has these top-level messages:
	Segment
	Cast
	Column
	Tile_Index
*/
package tile_index

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Segment struct {
	Segment []float64 `protobuf:"fixed64,1,rep,packed,name=Segment" json:"Segment,omitempty"`
}

func (m *Segment) Reset()                    { *m = Segment{} }
func (m *Segment) String() string            { return proto.CompactTextString(m) }
func (*Segment) ProtoMessage()               {}
func (*Segment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Segment) GetSegment() []float64 {
	if m != nil {
		return m.Segment
	}
	return nil
}

type Cast struct {
	Cast []int32 `protobuf:"varint,1,rep,packed,name=Cast" json:"Cast,omitempty"`
}

func (m *Cast) Reset()                    { *m = Cast{} }
func (m *Cast) String() string            { return proto.CompactTextString(m) }
func (*Cast) ProtoMessage()               {}
func (*Cast) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Cast) GetCast() []int32 {
	if m != nil {
		return m.Cast
	}
	return nil
}

type Column struct {
	Column []int32 `protobuf:"varint,1,rep,packed,name=Column" json:"Column,omitempty"`
}

func (m *Column) Reset()                    { *m = Column{} }
func (m *Column) String() string            { return proto.CompactTextString(m) }
func (*Column) ProtoMessage()               {}
func (*Column) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Column) GetColumn() []int32 {
	if m != nil {
		return m.Column
	}
	return nil
}

type Tile_Index struct {
	Lat        float64    `protobuf:"fixed64,1,opt,name=Lat" json:"Lat,omitempty"`
	Areas      []string   `protobuf:"bytes,2,rep,name=Areas" json:"Areas,omitempty"`
	Segments   []*Segment `protobuf:"bytes,3,rep,name=Segments" json:"Segments,omitempty"`
	Casts      []*Cast    `protobuf:"bytes,4,rep,name=Casts" json:"Casts,omitempty"`
	Columns    []*Column  `protobuf:"bytes,5,rep,name=Columns" json:"Columns,omitempty"`
	Properties []int32    `protobuf:"varint,6,rep,packed,name=Properties" json:"Properties,omitempty"`
}

func (m *Tile_Index) Reset()                    { *m = Tile_Index{} }
func (m *Tile_Index) String() string            { return proto.CompactTextString(m) }
func (*Tile_Index) ProtoMessage()               {}
func (*Tile_Index) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Tile_Index) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Tile_Index) GetAreas() []string {
	if m != nil {
		return m.Areas
	}
	return nil
}

func (m *Tile_Index) GetSegments() []*Segment {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *Tile_Index) GetCasts() []*Cast {
	if m != nil {
		return m.Casts
	}
	return nil
}

func (m *Tile_Index) GetColumns() []*Column {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *Tile_Index) GetProperties() []int32 {
	if m != nil {
		return m.Properties
	}
	return nil
}

func init() {
	proto.RegisterType((*Segment)(nil), "Segment")
	proto.RegisterType((*Cast)(nil), "Cast")
	proto.RegisterType((*Column)(nil), "Column")
	proto.RegisterType((*Tile_Index)(nil), "Tile_Index")
}

func init() { proto.RegisterFile("tile_index.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x14, 0x45, 0xc9, 0x64, 0xd2, 0x8e, 0xcf, 0x4d, 0x79, 0x88, 0x04, 0x15, 0xa9, 0x61, 0xc0, 0xac,
	0xb2, 0xd0, 0x2f, 0xd0, 0xae, 0x04, 0x17, 0x12, 0xdd, 0x4b, 0xc5, 0x20, 0x85, 0xb6, 0x29, 0x49,
	0x04, 0xbf, 0xce, 0x6f, 0x1b, 0x92, 0xb4, 0xa5, 0xab, 0xde, 0x7b, 0xde, 0xa5, 0x1c, 0x02, 0x55,
	0xe8, 0x7a, 0xf3, 0xd9, 0x8d, 0xdf, 0xe6, 0x4f, 0x4d, 0xce, 0x06, 0x2b, 0xee, 0xa1, 0x7c, 0x37,
	0x3f, 0x83, 0x19, 0x03, 0xde, 0xac, 0x91, 0x93, 0x9a, 0x4a, 0xf2, 0xbc, 0xab, 0x88, 0x5e, 0x90,
	0xb8, 0x85, 0x7d, 0xd3, 0xfa, 0x80, 0x97, 0xf9, 0x9b, 0x26, 0x2c, 0x4d, 0x52, 0x17, 0x47, 0x28,
	0x1a, 0xdb, 0xff, 0x0e, 0x23, 0x5e, 0x2d, 0x69, 0xb3, 0x99, 0x89, 0xf8, 0x27, 0x00, 0x1f, 0xd1,
	0xe1, 0x25, 0x3a, 0x60, 0x05, 0xf4, 0xb5, 0x8d, 0xff, 0x22, 0x92, 0xe8, 0x18, 0xf1, 0x02, 0xd8,
	0x93, 0x33, 0xad, 0xe7, 0xbb, 0x9a, 0xca, 0x33, 0x9d, 0x0b, 0x1e, 0xe1, 0x30, 0x7b, 0x78, 0x4e,
	0x6b, 0x2a, 0xcf, 0x1f, 0x0e, 0x6a, 0x06, 0x7a, 0xbd, 0xe0, 0x35, 0xb0, 0xa8, 0xe2, 0xf9, 0x3e,
	0x4d, 0x98, 0x8a, 0x4d, 0x67, 0x86, 0x77, 0x50, 0x66, 0x07, 0xcf, 0x59, 0x3a, 0x97, 0x2a, 0x77,
	0xbd, 0x70, 0x14, 0x00, 0x6f, 0xce, 0x4e, 0xc6, 0x85, 0xce, 0x78, 0x5e, 0xac, 0xf2, 0x1b, 0xfa,
	0x55, 0xa4, 0x67, 0x7b, 0x3c, 0x05, 0x00, 0x00, 0xff, 0xff, 0x12, 0x8f, 0xdc, 0xe4, 0x4a, 0x01,
	0x00, 0x00,
}
